{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/Work/Exminder/frontend/src/util/route_util.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst Auth = ({\n  component: Component,\n  path,\n  loggedIn,\n  exact\n}) => /*#__PURE__*/React.createElement(Route, {\n  path: path,\n  exact: exact,\n  render: props => !loggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/tweets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n});\n\nconst Protected = ({\n  component: Component,\n  loggedIn,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => loggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}));\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated\n});\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","map":{"version":3,"sources":["/Users/richard/Desktop/Work/Exminder/frontend/src/util/route_util.js"],"names":["React","connect","Route","Redirect","withRouter","Auth","component","Component","path","loggedIn","exact","props","Protected","rest","mapStateToProps","state","session","isAuthenticated","AuthRoute","ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,QAA9B;AAAwCC,EAAAA;AAAxC,CAAD,kBACX,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAEF,IAAb;AAAmB,EAAA,KAAK,EAAEE,KAA1B;AAAiC,EAAA,MAAM,EAAGC,KAAD,IACvC,CAACF,QAAD,gBACE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,gBAGE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAUA,MAAMC,SAAS,GAAG,CAAC;AAAEN,EAAAA,SAAS,EAAEC,SAAb;AAAwBE,EAAAA,QAAxB;AAAkC,KAAGI;AAArC,CAAD,kBAChB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEF,KAAK,IACXF,QAAQ,gBACN,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADM,gBAGN,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAaA,MAAMG,eAAe,GAAGC,KAAK,KAC3B;AAACN,EAAAA,QAAQ,EAAEM,KAAK,CAACC,OAAN,CAAcC;AAAzB,CAD2B,CAA7B;;AAIA,OAAO,MAAMC,SAAS,GAAGd,UAAU,CAACH,OAAO,CAACa,eAAD,CAAP,CAAyBT,IAAzB,CAAD,CAA5B;AAEP,OAAO,MAAMc,cAAc,GAAGf,UAAU,CAACH,OAAO,CAACa,eAAD,CAAP,CAAyBF,SAAzB,CAAD,CAAjC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n      <Redirect to=\"/tweets\" />\n    )\n  )} />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => (\n  {loggedIn: state.session.isAuthenticated}\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n"]},"metadata":{},"sourceType":"module"}